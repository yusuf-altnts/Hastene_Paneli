<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>